@page "/prices"

@inject IPricesService _pricesService
@inject IProductionService _productionService

<div class="prices">
    <div class="left-side">
        <div class="lable">
            <span class="lable-production">Цены</span>
        </div>
        <div class="container vertical">
            <div class="container vertical" style="--use-accessibility:true;">
                @if (prices != null)
                {
                    <div style="overflow: hidden">
                        <IgbDataGrid Height="720px" 
                                        Width="800px"
                                        HeaderBackground="transparent"
                                        BorderWidthBottom="0"
                                        BorderWidthLeft="0"
                                        BorderWidthRight="0"
                                        BorderWidthTop="0"
                                        HeaderFontFamily="Montserrat"
                                        CellFontFamily="Montserrat"
                                        HeaderRowSeparatorBackground="transparent"
                                        HeaderSeparatorWidth="0"
                                        DataSource="prices"
                                        AutoGenerateColumns="false"
                                        SelectionMode="GridSelectionMode.SingleRow">
                            <IgbTextColumn Field="ProductName" Width="@("*>100")" HeaderText="Наименование" HorizontalAlignment="CellContentHorizontalAlignment.Center" />
                            <IgbDateTimeColumn Field="Date" Width="@("*>100")" HeaderText="Дата установления" DateTimeFormat="DateTimeFormats.DateShort" HorizontalAlignment="CellContentHorizontalAlignment.Center" />
                            <IgbNumericColumn Field="PriceOfProduct" Width="@("*>100")" HeaderText="Цена" PositiveSuffix=" р." NegativeSuffix=" р." HorizontalAlignment="CellContentHorizontalAlignment.Center" />
                        </IgbDataGrid>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="right-side">
        <div class="lable">
            <span class="add-price">Добавить цену</span>
        </div>
        <div class="inputes">
            <span>Название</span>
            <select class="select" @bind="ProductName">
                @if (products != null)
                {
                    @foreach (var product in products)
                    {
                        <option value="@(product.Name + " " + product.Type)">@(product.Name + " " + product.Type)</option>
                    }
                }
            </select>
            <span>Цена</span>
            <input type="number" @bind="Price"></input>
        </div>
        <div class="buttons">
            <button @onclick="Add">Добавить</button>
        </div>
    </div>
</div>

@code {
    private string ProductName { get; set; }
    private decimal Price { get; set; }

    private List<Product> products;
    private List<Price> prices;

    private int statusCode;

    protected override async Task OnInitializedAsync()
    {
        products = await _productionService.GetProducts();
        prices = await _pricesService.GetPrices();

        ProductName = products[0].Name + " " + products[0].Type;
    }

    private async Task Add()
    {
        var price = prices.FirstOrDefault(pr => pr.ProductName == ProductName);

        price.PriceOfProduct = Price;

        statusCode = await _pricesService.AddPrice(price);

        prices = await _pricesService.GetPrices();

        StateHasChanged();
    }
}
