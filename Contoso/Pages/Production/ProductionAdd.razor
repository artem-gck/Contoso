@page "/production/add"

@inject IProductionService _productionService

<div class="lable">
    <span class="lable-production">Добавить продукцию</span>
</div>
<div class="container">
    <div class="left-side">
        <span>Продукт</span>
        <input @bind="NameField"></input>
        <span>Наименование</span>
        <input @bind="TypeField"></input>
        <span>Цвет</span>
        <input @bind="ColorField"></input>
    </div>
    <div class="right-side">
        <span>Количество</span>
        <input type="number" @bind="AmountField"></input>
        <span>Цена</span>
        <input type="number" @bind="PriceField"></input>
    </div>
</div>
<div class="buttons">
    <button @onclick="Add">Добавить</button>
    <button @onclick="AddFromFile">Добавить из файла</button>
</div>

@code {
    private string NameField { get; set; }
    private string TypeField { get; set; }
    private string ColorField { get; set; }
    private int AmountField { get; set; }
    private decimal PriceField { get; set; }

    private int statusCode;

    private async Task Add()
    {
        var product = new Product()
            {
                Name = NameField,
                Type = TypeField,
                Color = ColorField,
                Amount = AmountField,
                Price = PriceField
            };

        statusCode = await _productionService.AddProduct(product);

        ClearFields();
    }

    private async Task AddFromFile()
    {

    }

    private void ClearFields()
    {
        NameField = string.Empty;
        TypeField = string.Empty;
        ColorField = string.Empty;
        AmountField = 0;
        PriceField = 0;
    }
}
